import { Pi } from '.'

let pi

beforeEach(async () => {
  pi = await Pi.create({ enqId: 'test', piDate: 'test', ccAmt: 'test', ccGST: 'test', ccTotal: 'test', sAmt: 'test', sGST: 'test', sTotal: 'test', aAmt: 'test', aGST: 'test', aTotal: 'test', tAmt: 'test', tGST: 'test', tTotal: 'test', extDrw: 'test', intDrw: 'test', looseShelf: 'test', vPartitions: 'test', edgeFinish: 'test', createdBy: 'test', intCheckedBy: 'test', intCheckedDate: 'test', approvedBy: 'test', approvedDate: 'test', ordered: 'test', orderDate: 'test' })
})

describe('view', () => {
  it('returns simple view', () => {
    const view = pi.view()
    expect(typeof view).toBe('object')
    expect(view.id).toBe(pi.id)
    expect(view.enqId).toBe(pi.enqId)
    expect(view.piDate).toBe(pi.piDate)
    expect(view.ccAmt).toBe(pi.ccAmt)
    expect(view.ccGST).toBe(pi.ccGST)
    expect(view.ccTotal).toBe(pi.ccTotal)
    expect(view.sAmt).toBe(pi.sAmt)
    expect(view.sGST).toBe(pi.sGST)
    expect(view.sTotal).toBe(pi.sTotal)
    expect(view.aAmt).toBe(pi.aAmt)
    expect(view.aGST).toBe(pi.aGST)
    expect(view.aTotal).toBe(pi.aTotal)
    expect(view.tAmt).toBe(pi.tAmt)
    expect(view.tGST).toBe(pi.tGST)
    expect(view.tTotal).toBe(pi.tTotal)
    expect(view.extDrw).toBe(pi.extDrw)
    expect(view.intDrw).toBe(pi.intDrw)
    expect(view.looseShelf).toBe(pi.looseShelf)
    expect(view.vPartitions).toBe(pi.vPartitions)
    expect(view.edgeFinish).toBe(pi.edgeFinish)
    expect(view.createdBy).toBe(pi.createdBy)
    expect(view.intCheckedBy).toBe(pi.intCheckedBy)
    expect(view.intCheckedDate).toBe(pi.intCheckedDate)
    expect(view.approvedBy).toBe(pi.approvedBy)
    expect(view.approvedDate).toBe(pi.approvedDate)
    expect(view.ordered).toBe(pi.ordered)
    expect(view.orderDate).toBe(pi.orderDate)
    expect(view.createdAt).toBeTruthy()
    expect(view.updatedAt).toBeTruthy()
  })

  it('returns full view', () => {
    const view = pi.view(true)
    expect(typeof view).toBe('object')
    expect(view.id).toBe(pi.id)
    expect(view.enqId).toBe(pi.enqId)
    expect(view.piDate).toBe(pi.piDate)
    expect(view.ccAmt).toBe(pi.ccAmt)
    expect(view.ccGST).toBe(pi.ccGST)
    expect(view.ccTotal).toBe(pi.ccTotal)
    expect(view.sAmt).toBe(pi.sAmt)
    expect(view.sGST).toBe(pi.sGST)
    expect(view.sTotal).toBe(pi.sTotal)
    expect(view.aAmt).toBe(pi.aAmt)
    expect(view.aGST).toBe(pi.aGST)
    expect(view.aTotal).toBe(pi.aTotal)
    expect(view.tAmt).toBe(pi.tAmt)
    expect(view.tGST).toBe(pi.tGST)
    expect(view.tTotal).toBe(pi.tTotal)
    expect(view.extDrw).toBe(pi.extDrw)
    expect(view.intDrw).toBe(pi.intDrw)
    expect(view.looseShelf).toBe(pi.looseShelf)
    expect(view.vPartitions).toBe(pi.vPartitions)
    expect(view.edgeFinish).toBe(pi.edgeFinish)
    expect(view.createdBy).toBe(pi.createdBy)
    expect(view.intCheckedBy).toBe(pi.intCheckedBy)
    expect(view.intCheckedDate).toBe(pi.intCheckedDate)
    expect(view.approvedBy).toBe(pi.approvedBy)
    expect(view.approvedDate).toBe(pi.approvedDate)
    expect(view.ordered).toBe(pi.ordered)
    expect(view.orderDate).toBe(pi.orderDate)
    expect(view.createdAt).toBeTruthy()
    expect(view.updatedAt).toBeTruthy()
  })
})
