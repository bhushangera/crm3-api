import { TimeSheets } from '.'

let timeSheets

beforeEach(async () => {
  timeSheets = await TimeSheets.create({ partyId: 'test', currentDate: 'test', month: 'test', week: 'test', day: 'test', status: 'test', in: 'test', out: 'test', CL: 'test', EL: 'test', present: 'test', absent: 'test', weeklyOff: 'test', leave: 'test', WeeklyOff: 'test', OT: 'test', OTHrs: 'test', Remarks: 'test', dutyHrs: 'test' })
})

describe('view', () => {
  it('returns simple view', () => {
    const view = timeSheets.view()
    expect(typeof view).toBe('object')
    expect(view.id).toBe(timeSheets.id)
    expect(view.partyId).toBe(timeSheets.partyId)
    expect(view.currentDate).toBe(timeSheets.currentDate)
    expect(view.month).toBe(timeSheets.month)
    expect(view.week).toBe(timeSheets.week)
    expect(view.day).toBe(timeSheets.day)
    expect(view.status).toBe(timeSheets.status)
    expect(view.in).toBe(timeSheets.in)
    expect(view.out).toBe(timeSheets.out)
    expect(view.CL).toBe(timeSheets.CL)
    expect(view.EL).toBe(timeSheets.EL)
    expect(view.present).toBe(timeSheets.present)
    expect(view.absent).toBe(timeSheets.absent)
    expect(view.weeklyOff).toBe(timeSheets.weeklyOff)
    expect(view.leave).toBe(timeSheets.leave)
    expect(view.WeeklyOff).toBe(timeSheets.WeeklyOff)
    expect(view.OT).toBe(timeSheets.OT)
    expect(view.OTHrs).toBe(timeSheets.OTHrs)
    expect(view.Remarks).toBe(timeSheets.Remarks)
    expect(view.dutyHrs).toBe(timeSheets.dutyHrs)
    expect(view.createdAt).toBeTruthy()
    expect(view.updatedAt).toBeTruthy()
  })

  it('returns full view', () => {
    const view = timeSheets.view(true)
    expect(typeof view).toBe('object')
    expect(view.id).toBe(timeSheets.id)
    expect(view.partyId).toBe(timeSheets.partyId)
    expect(view.currentDate).toBe(timeSheets.currentDate)
    expect(view.month).toBe(timeSheets.month)
    expect(view.week).toBe(timeSheets.week)
    expect(view.day).toBe(timeSheets.day)
    expect(view.status).toBe(timeSheets.status)
    expect(view.in).toBe(timeSheets.in)
    expect(view.out).toBe(timeSheets.out)
    expect(view.CL).toBe(timeSheets.CL)
    expect(view.EL).toBe(timeSheets.EL)
    expect(view.present).toBe(timeSheets.present)
    expect(view.absent).toBe(timeSheets.absent)
    expect(view.weeklyOff).toBe(timeSheets.weeklyOff)
    expect(view.leave).toBe(timeSheets.leave)
    expect(view.WeeklyOff).toBe(timeSheets.WeeklyOff)
    expect(view.OT).toBe(timeSheets.OT)
    expect(view.OTHrs).toBe(timeSheets.OTHrs)
    expect(view.Remarks).toBe(timeSheets.Remarks)
    expect(view.dutyHrs).toBe(timeSheets.dutyHrs)
    expect(view.createdAt).toBeTruthy()
    expect(view.updatedAt).toBeTruthy()
  })
})
