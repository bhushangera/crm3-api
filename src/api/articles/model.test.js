import { Articles } from '.'

let articles

beforeEach(async () => {
  articles = await Articles.create({ AGId: 'test', AGCode: 'test', MId: 'test', MCode: 'test', mType: 'test', MakeId: 'test', MakeCode: 'test', MCId: 'test', MCCode: 'test', SMCId: 'test', SMCCode: 'test', ArticleCode: 'test', ArticleDescription: 'test', listRate: 'test', GST: 'test', slug: 'test', isPrimary: 'test', image: 'test', isActive: 'test' })
})

describe('view', () => {
  it('returns simple view', () => {
    const view = articles.view()
    expect(typeof view).toBe('object')
    expect(view.id).toBe(articles.id)
    expect(view.AGId).toBe(articles.AGId)
    expect(view.AGCode).toBe(articles.AGCode)
    expect(view.MId).toBe(articles.MId)
    expect(view.MCode).toBe(articles.MCode)
    expect(view.mType).toBe(articles.mType)
    expect(view.MakeId).toBe(articles.MakeId)
    expect(view.MakeCode).toBe(articles.MakeCode)
    expect(view.MCId).toBe(articles.MCId)
    expect(view.MCCode).toBe(articles.MCCode)
    expect(view.SMCId).toBe(articles.SMCId)
    expect(view.SMCCode).toBe(articles.SMCCode)
    expect(view.ArticleCode).toBe(articles.ArticleCode)
    expect(view.ArticleDescription).toBe(articles.ArticleDescription)
    expect(view.listRate).toBe(articles.listRate)
    expect(view.GST).toBe(articles.GST)
    expect(view.slug).toBe(articles.slug)
    expect(view.isPrimary).toBe(articles.isPrimary)
    expect(view.image).toBe(articles.image)
    expect(view.isActive).toBe(articles.isActive)
    expect(view.createdAt).toBeTruthy()
    expect(view.updatedAt).toBeTruthy()
  })

  it('returns full view', () => {
    const view = articles.view(true)
    expect(typeof view).toBe('object')
    expect(view.id).toBe(articles.id)
    expect(view.AGId).toBe(articles.AGId)
    expect(view.AGCode).toBe(articles.AGCode)
    expect(view.MId).toBe(articles.MId)
    expect(view.MCode).toBe(articles.MCode)
    expect(view.mType).toBe(articles.mType)
    expect(view.MakeId).toBe(articles.MakeId)
    expect(view.MakeCode).toBe(articles.MakeCode)
    expect(view.MCId).toBe(articles.MCId)
    expect(view.MCCode).toBe(articles.MCCode)
    expect(view.SMCId).toBe(articles.SMCId)
    expect(view.SMCCode).toBe(articles.SMCCode)
    expect(view.ArticleCode).toBe(articles.ArticleCode)
    expect(view.ArticleDescription).toBe(articles.ArticleDescription)
    expect(view.listRate).toBe(articles.listRate)
    expect(view.GST).toBe(articles.GST)
    expect(view.slug).toBe(articles.slug)
    expect(view.isPrimary).toBe(articles.isPrimary)
    expect(view.image).toBe(articles.image)
    expect(view.isActive).toBe(articles.isActive)
    expect(view.createdAt).toBeTruthy()
    expect(view.updatedAt).toBeTruthy()
  })
})
