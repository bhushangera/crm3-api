import { Departments } from '.'

let departments

beforeEach(async () => {
  departments = await Departments.create({ companyId: 'test', company: 'test', businessUnitId: 'test', businessUnit: 'test', deptName: 'test', description: 'test', active: 'test', building: 'test', roomNo: 'test', address: 'test', cityId: 'test', city: 'test', stateId: 'test', state: 'test', countryId: 'test', country: 'test', pinCode: 'test', email: 'test', landline: 'test', extension: 'test', mobile: 'test' })
})

describe('view', () => {
  it('returns simple view', () => {
    const view = departments.view()
    expect(typeof view).toBe('object')
    expect(view.id).toBe(departments.id)
    expect(view.companyId).toBe(departments.companyId)
    expect(view.company).toBe(departments.company)
    expect(view.businessUnitId).toBe(departments.businessUnitId)
    expect(view.businessUnit).toBe(departments.businessUnit)
    expect(view.deptName).toBe(departments.deptName)
    expect(view.description).toBe(departments.description)
    expect(view.active).toBe(departments.active)
    expect(view.building).toBe(departments.building)
    expect(view.roomNo).toBe(departments.roomNo)
    expect(view.address).toBe(departments.address)
    expect(view.cityId).toBe(departments.cityId)
    expect(view.city).toBe(departments.city)
    expect(view.stateId).toBe(departments.stateId)
    expect(view.state).toBe(departments.state)
    expect(view.countryId).toBe(departments.countryId)
    expect(view.country).toBe(departments.country)
    expect(view.pinCode).toBe(departments.pinCode)
    expect(view.email).toBe(departments.email)
    expect(view.landline).toBe(departments.landline)
    expect(view.extension).toBe(departments.extension)
    expect(view.mobile).toBe(departments.mobile)
    expect(view.createdAt).toBeTruthy()
    expect(view.updatedAt).toBeTruthy()
  })

  it('returns full view', () => {
    const view = departments.view(true)
    expect(typeof view).toBe('object')
    expect(view.id).toBe(departments.id)
    expect(view.companyId).toBe(departments.companyId)
    expect(view.company).toBe(departments.company)
    expect(view.businessUnitId).toBe(departments.businessUnitId)
    expect(view.businessUnit).toBe(departments.businessUnit)
    expect(view.deptName).toBe(departments.deptName)
    expect(view.description).toBe(departments.description)
    expect(view.active).toBe(departments.active)
    expect(view.building).toBe(departments.building)
    expect(view.roomNo).toBe(departments.roomNo)
    expect(view.address).toBe(departments.address)
    expect(view.cityId).toBe(departments.cityId)
    expect(view.city).toBe(departments.city)
    expect(view.stateId).toBe(departments.stateId)
    expect(view.state).toBe(departments.state)
    expect(view.countryId).toBe(departments.countryId)
    expect(view.country).toBe(departments.country)
    expect(view.pinCode).toBe(departments.pinCode)
    expect(view.email).toBe(departments.email)
    expect(view.landline).toBe(departments.landline)
    expect(view.extension).toBe(departments.extension)
    expect(view.mobile).toBe(departments.mobile)
    expect(view.createdAt).toBeTruthy()
    expect(view.updatedAt).toBeTruthy()
  })
})
