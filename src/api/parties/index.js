import { Router } from "express";
import { middleware as query } from "querymen";
import { middleware as body } from "bodymen";
import { create, index, show, update, destroy } from "./controller";
import { schema } from "./model";
export Parties, { schema } from "./model";

const router = new Router();
const {
  leadId,
  uuid,
  custId,
  scrollNo,
  generateFrom,
  buId,
  businessUnit,
  title,
  avatar,
  name,
  lastName,
  mobile,
  managerId, reportsTo, reportsToUUID,
  manager,
  teamId,
  team,
  email,
  custType,
  categoryId,
  categoryCode,
  companyName,
  legalName,
  sectorCategoryId,
  sectorCategoryCode,
  campiagnId,
  campaignCode,
  refPartyId,
  entityId,
  entityCode,
  stateId,
  stateCode,
  statusId,
  statusCode,
  segmentCategoryId,
  segmentCategory,
  territoryId,
  logo,
  slug,
  fullName,
  bio,
  hasCreditLimit,
  billingAddress,
  shippingAddress,
  commercials, isDealer,
  creditLimit,
  address,
} = schema.tree;

router.post(
  "/",
  body({
    leadId,
    uuid,
    custId,
    scrollNo,
    generateFrom,
    buId,
    businessUnit,
    title,
    avatar,
    name,
    lastName,
    mobile,
    managerId, reportsTo, reportsToUUID,
    manager,
    teamId,
    team,
    email,
    custType,
    categoryId,
    categoryCode,
    companyName,
    legalName,
    sectorCategoryId,
    sectorCategoryCode,
    campiagnId,
    campaignCode,
    refPartyId,
    entityId,
    entityCode,
    stateId,
    stateCode,
    statusId,
    statusCode,
    segmentCategoryId,
    segmentCategory,
    territoryId,
    logo,
    slug,
    fullName,
    bio,
    hasCreditLimit,
    billingAddress,
    shippingAddress,
    commercials, isDealer,
    creditLimit,
    address,
  }),
  create
);

router.get("/", query(), index);

router.get("/:id", show);

router.put(
  "/:id",
  body({
    leadId,
    uuid,
    custId,
    scrollNo,
    generateFrom,
    buId,
    businessUnit,
    title,
    avatar,
    name,
    lastName,
    mobile,
    managerId, reportsTo, reportsToUUID,
    manager,
    teamId,
    team,
    email,
    custType,
    categoryId,
    categoryCode,
    companyName,
    legalName,
    sectorCategoryId,
    sectorCategoryCode,
    campiagnId,
    campaignCode,
    refPartyId,
    entityId,
    entityCode,
    stateId,
    stateCode,
    statusId,
    statusCode,
    segmentCategoryId,
    segmentCategory,
    territoryId,
    logo,
    slug,
    fullName,
    bio,
    hasCreditLimit,
    billingAddress,
    shippingAddress,
    commercials, isDealer,
    creditLimit,
    address
  }),
  update
);

router.delete("/:id", destroy);

export default router;
