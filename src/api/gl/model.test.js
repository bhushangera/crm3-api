import { Gl } from '.'

let gl

beforeEach(async () => {
  gl = await Gl.create({ txDate: 'test', debitACId: 'test', creditACId: 'test', debitAC: 'test', creditAC: 'test', amount: 'test', postedById: 'test', postedBy: 'test', approvedById: 'test', approovedBy: 'test', verifiedById: 'test', verifiedBy: 'test', vDate: 'test', aDate: 'test', remarks: 'test', opdId: 'test', ipdId: 'test', pInvId: 'test', erId: 'test', UHID: 'test', partyId: 'test', patientName: 'test', bookingId: 'test', partyName: 'test', accountType: 'test', code: 'test', description: 'test', txnType: 'test', modified: 'test' })
})

describe('view', () => {
  it('returns simple view', () => {
    const view = gl.view()
    expect(typeof view).toBe('object')
    expect(view.id).toBe(gl.id)
    expect(view.txDate).toBe(gl.txDate)
    expect(view.debitACId).toBe(gl.debitACId)
    expect(view.creditACId).toBe(gl.creditACId)
    expect(view.debitAC).toBe(gl.debitAC)
    expect(view.creditAC).toBe(gl.creditAC)
    expect(view.amount).toBe(gl.amount)
    expect(view.postedById).toBe(gl.postedById)
    expect(view.postedBy).toBe(gl.postedBy)
    expect(view.approvedById).toBe(gl.approvedById)
    expect(view.approovedBy).toBe(gl.approovedBy)
    expect(view.verifiedById).toBe(gl.verifiedById)
    expect(view.verifiedBy).toBe(gl.verifiedBy)
    expect(view.vDate).toBe(gl.vDate)
    expect(view.aDate).toBe(gl.aDate)
    expect(view.remarks).toBe(gl.remarks)
    expect(view.opdId).toBe(gl.opdId)
    expect(view.ipdId).toBe(gl.ipdId)
    expect(view.pInvId).toBe(gl.pInvId)
    expect(view.erId).toBe(gl.erId)
    expect(view.UHID).toBe(gl.UHID)
    expect(view.partyId).toBe(gl.partyId)
    expect(view.patientName).toBe(gl.patientName)
    expect(view.bookingId).toBe(gl.bookingId)
    expect(view.partyName).toBe(gl.partyName)
    expect(view.accountType).toBe(gl.accountType)
    expect(view.code).toBe(gl.code)
    expect(view.description).toBe(gl.description)
    expect(view.txnType).toBe(gl.txnType)
    expect(view.modified).toBe(gl.modified)
    expect(view.createdAt).toBeTruthy()
    expect(view.updatedAt).toBeTruthy()
  })

  it('returns full view', () => {
    const view = gl.view(true)
    expect(typeof view).toBe('object')
    expect(view.id).toBe(gl.id)
    expect(view.txDate).toBe(gl.txDate)
    expect(view.debitACId).toBe(gl.debitACId)
    expect(view.creditACId).toBe(gl.creditACId)
    expect(view.debitAC).toBe(gl.debitAC)
    expect(view.creditAC).toBe(gl.creditAC)
    expect(view.amount).toBe(gl.amount)
    expect(view.postedById).toBe(gl.postedById)
    expect(view.postedBy).toBe(gl.postedBy)
    expect(view.approvedById).toBe(gl.approvedById)
    expect(view.approovedBy).toBe(gl.approovedBy)
    expect(view.verifiedById).toBe(gl.verifiedById)
    expect(view.verifiedBy).toBe(gl.verifiedBy)
    expect(view.vDate).toBe(gl.vDate)
    expect(view.aDate).toBe(gl.aDate)
    expect(view.remarks).toBe(gl.remarks)
    expect(view.opdId).toBe(gl.opdId)
    expect(view.ipdId).toBe(gl.ipdId)
    expect(view.pInvId).toBe(gl.pInvId)
    expect(view.erId).toBe(gl.erId)
    expect(view.UHID).toBe(gl.UHID)
    expect(view.partyId).toBe(gl.partyId)
    expect(view.patientName).toBe(gl.patientName)
    expect(view.bookingId).toBe(gl.bookingId)
    expect(view.partyName).toBe(gl.partyName)
    expect(view.accountType).toBe(gl.accountType)
    expect(view.code).toBe(gl.code)
    expect(view.description).toBe(gl.description)
    expect(view.txnType).toBe(gl.txnType)
    expect(view.modified).toBe(gl.modified)
    expect(view.createdAt).toBeTruthy()
    expect(view.updatedAt).toBeTruthy()
  })
})
