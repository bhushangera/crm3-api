import { OrderTracking } from '.'

let orderTracking

beforeEach(async () => {
  orderTracking = await OrderTracking.create({ sanctioned: 'test', SanctionedRemarks: 'test', scheduled: 'test', scheduledRemarks: 'test', inProduction: 'test', PriductionRemarks: 'test', inQA: 'test', QARemakrs: 'test', inPackaging: 'test', PackagingRemarks: 'test', clearance: 'test', ClaranceRemarks: 'test', shipped: 'test', ShipmentRemakrs: 'test', shippingDocument: 'test', shippingDetails: 'test', delivered: 'test', deliveryReport: 'test' })
})

describe('view', () => {
  it('returns simple view', () => {
    const view = orderTracking.view()
    expect(typeof view).toBe('object')
    expect(view.id).toBe(orderTracking.id)
    expect(view.sanctioned).toBe(orderTracking.sanctioned)
    expect(view.SanctionedRemarks).toBe(orderTracking.SanctionedRemarks)
    expect(view.scheduled).toBe(orderTracking.scheduled)
    expect(view.scheduledRemarks).toBe(orderTracking.scheduledRemarks)
    expect(view.inProduction).toBe(orderTracking.inProduction)
    expect(view.PriductionRemarks).toBe(orderTracking.PriductionRemarks)
    expect(view.inQA).toBe(orderTracking.inQA)
    expect(view.QARemakrs).toBe(orderTracking.QARemakrs)
    expect(view.inPackaging).toBe(orderTracking.inPackaging)
    expect(view.PackagingRemarks).toBe(orderTracking.PackagingRemarks)
    expect(view.clearance).toBe(orderTracking.clearance)
    expect(view.ClaranceRemarks).toBe(orderTracking.ClaranceRemarks)
    expect(view.shipped).toBe(orderTracking.shipped)
    expect(view.ShipmentRemakrs).toBe(orderTracking.ShipmentRemakrs)
    expect(view.shippingDocument).toBe(orderTracking.shippingDocument)
    expect(view.shippingDetails).toBe(orderTracking.shippingDetails)
    expect(view.delivered).toBe(orderTracking.delivered)
    expect(view.deliveryReport).toBe(orderTracking.deliveryReport)
    expect(view.createdAt).toBeTruthy()
    expect(view.updatedAt).toBeTruthy()
  })

  it('returns full view', () => {
    const view = orderTracking.view(true)
    expect(typeof view).toBe('object')
    expect(view.id).toBe(orderTracking.id)
    expect(view.sanctioned).toBe(orderTracking.sanctioned)
    expect(view.SanctionedRemarks).toBe(orderTracking.SanctionedRemarks)
    expect(view.scheduled).toBe(orderTracking.scheduled)
    expect(view.scheduledRemarks).toBe(orderTracking.scheduledRemarks)
    expect(view.inProduction).toBe(orderTracking.inProduction)
    expect(view.PriductionRemarks).toBe(orderTracking.PriductionRemarks)
    expect(view.inQA).toBe(orderTracking.inQA)
    expect(view.QARemakrs).toBe(orderTracking.QARemakrs)
    expect(view.inPackaging).toBe(orderTracking.inPackaging)
    expect(view.PackagingRemarks).toBe(orderTracking.PackagingRemarks)
    expect(view.clearance).toBe(orderTracking.clearance)
    expect(view.ClaranceRemarks).toBe(orderTracking.ClaranceRemarks)
    expect(view.shipped).toBe(orderTracking.shipped)
    expect(view.ShipmentRemakrs).toBe(orderTracking.ShipmentRemakrs)
    expect(view.shippingDocument).toBe(orderTracking.shippingDocument)
    expect(view.shippingDetails).toBe(orderTracking.shippingDetails)
    expect(view.delivered).toBe(orderTracking.delivered)
    expect(view.deliveryReport).toBe(orderTracking.deliveryReport)
    expect(view.createdAt).toBeTruthy()
    expect(view.updatedAt).toBeTruthy()
  })
})
