import { Router } from 'express'
import { middleware as query } from 'querymen'
import { middleware as body } from 'bodymen'
import { create, index, show, update, destroy } from './controller'
import { schema } from './model'
export PiShutter, { schema } from './model'

const router = new Router()
const {
  itemNo,
  piId,
  entityId,
  entityCode,
  categoryId,
  category,
  categoryCode,
  categoryDescription,
  categoryCodeId,
  categoryCodeDescription,
  moduleVariantId,
  code,
  description,
  remarks,
  image,
  baseRate,
  billingUnit,
  costing,
  dealerRate,
  operativeFactorId,
  retailRate,
  factor,
  rate,
  shutterThickness,
  frameWidth,
  exposedSide,
  cncDesign,
  cncHandleStd,
  cncHandlePremium,
  SBSLPlus,
  EPHStd,
  EPHPremium,
  premiumTape,
  PWEdgeStd,
  PWEdgePremium,
  premiumProfile,
  lamination,
  construction,
  frontLamination,
  backLamination,
  edging,
  baseMaterialId,
  baseMakeId,
  baseMaterialThickness,
  baseSKUId,
  baseSKU,
  backMaterialId,
  backMakeId,
  backMaterialThickness,
  backSKUId,
  backSKU,
  frontFinishMaterialId,
  frontFinishThickness,
  frontFinishMakes,
  glassMaterialId,
  glassMakeId,
  glassSKUId,
  glassSKU,
  glassThickness,
  EBMaterialId,
  EBMakeId,
  EBWidth,
  EBThickness,
  EBSKUId,
  EBSKU,
  frontFinishMakeId,
  frontFinishMake,
  glassRAL,
  frontFinishSKUId,
  frontFinishSKU,
  frontShadeSwatch,
  grains,
  SBSL,
  backFinishMaterialId,
  backFinishMakeId,
  backFinishThickness,
  backFinishSKUId,
  backFinishSKU,
  backShades,
  backShadeSwatch,
  frontRAL,
  backRAL,
  EBColor,
  EBSwatch,
  baseProfileMaterialId,
  handleProfileMaterialId,
  profileWidth,
  profileMakeId,
  baseProfileSKUId,
  isPremiumProfile,
  baseProfileSKU,
  handleProfileSKUId,
  handleProfileSKU,
  topCoatMaterialId,
  topCoatMakeId,
  topCoatSKUId,
  topCoatSKU,
  backCoatMaterialId,
  backCoatMake,
  backCoatSKUId,
  backCoatSKU,
  handleType,
  IPMaterialId, IPHandleMaterialId,
  IPMakeId,
  IPWidth,
  IPThickness,
  IPSKUId,
  IPSKU,
  IPHandleSKUId,
  IPHandleSKU,
  profileHeight,
  wallHeightAdjustment
} = schema.tree

/**
 * @api {post} /PIShutter Create pi shutter
 * @apiName CreatePiShutter
 * @apiGroup PiShutter
 * @apiParam code Pi shutter's code.
 * @apiSuccess {Object} piShutter Pi shutter's data.
 * @apiError {Object} 400 Some parameters may contain invalid values.
 * @apiError 404 Pi shutter not found.
 */
router.post('/',
  body({
    itemNo,
    piId,
    entityId,
    entityCode,
    categoryId,
    category,
    categoryCode,
    categoryDescription,
    categoryCodeId,
    categoryCodeDescription,
    moduleVariantId,
    code,
    description,
    remarks,
    image,
    baseRate,
    billingUnit,
    costing,
    dealerRate,
    operativeFactorId,
    retailRate,
    factor,
    rate,
    shutterThickness,
    frameWidth,
    exposedSide,
    cncDesign,
    cncHandleStd,
    cncHandlePremium,
    SBSLPlus,
    EPHStd,
    EPHPremium,
    premiumTape,
    PWEdgeStd,
    PWEdgePremium,
    premiumProfile,
    lamination,
    construction,
    frontLamination,
    backLamination,
    edging,
    baseMaterialId,
    baseMakeId,
    baseMaterialThickness,
    baseSKUId,
    baseSKU,
    backMaterialId,
    backMakeId,
    backMaterialThickness,
    backSKUId,
    backSKU,
    frontFinishMaterialId,
    frontFinishThickness,
    frontFinishMakes,
    glassMaterialId,
    glassMakeId,
    glassSKUId,
    glassSKU,
    glassThickness,
    EBMaterialId,
    EBMakeId,
    EBWidth,
    EBThickness,
    EBSKUId,
    EBSKU,
    frontFinishMakeId,
    frontFinishMake,
    glassRAL,
    frontFinishSKUId,
    frontFinishSKU,
    frontShadeSwatch,
    grains,
    SBSL,
    backFinishMaterialId,
    backFinishMakeId,
    backFinishThickness,
    backFinishSKUId,
    backFinishSKU,
    backShades,
    backShadeSwatch,
    frontRAL,
    backRAL,
    EBColor,
    EBSwatch,
    baseProfileMaterialId,
    handleProfileMaterialId,
    profileWidth,
    profileMakeId,
    baseProfileSKUId,
    isPremiumProfile,
    baseProfileSKU,
    handleProfileSKUId,
    handleProfileSKU,
    topCoatMaterialId,
    topCoatMakeId,
    topCoatSKUId,
    topCoatSKU,
    backCoatMaterialId,
    backCoatMake,
    backCoatSKUId,
    backCoatSKU,
    handleType,
    IPMaterialId,
    IPHandleMaterialId,
    IPMakeId,
    IPWidth,
    IPThickness,
    IPSKUId,
    IPSKU,
    IPHandleSKUId,
    IPHandleSKU,
    profileHeight,
    wallHeightAdjustment
  }),
  create)

/**
 * @api {get} /PIShutter Retrieve pi shutters
 * @apiName RetrievePiShutters
 * @apiGroup PiShutter
 * @apiUse listParams
 * @apiSuccess {Object[]} piShutters List of pi shutters.
 * @apiError {Object} 400 Some parameters may contain invalid values.
 */
router.get('/',
  query(),
  index)

/**
 * @api {get} /PIShutter/:id Retrieve pi shutter
 * @apiName RetrievePiShutter
 * @apiGroup PiShutter
 * @apiSuccess {Object} piShutter Pi shutter's data.
 * @apiError {Object} 400 Some parameters may contain invalid values.
 * @apiError 404 Pi shutter not found.
 */
router.get('/:id',
  show)

/**
 * @api {put} /PIShutter/:id Update pi shutter
 * @apiName UpdatePiShutter
 * @apiGroup PiShutter
 * @apiParam code Pi shutter's code.
 * @apiSuccess {Object} piShutter Pi shutter's data.
 * @apiError {Object} 400 Some parameters may contain invalid values.
 * @apiError 404 Pi shutter not found.
 */
router.put('/:id',
  body({
    itemNo,
    piId,
    entityId,
    entityCode,
    categoryId,
    category,
    categoryCode,
    categoryDescription,
    categoryCodeId,
    categoryCodeDescription,
    moduleVariantId,
    code,
    description,
    remarks,
    image,
    baseRate,
    billingUnit,
    costing,
    dealerRate,
    operativeFactorId,
    retailRate,
    factor,
    rate,
    shutterThickness,
    frameWidth,
    exposedSide,
    cncDesign,
    cncHandleStd,
    cncHandlePremium,
    SBSLPlus,
    EPHStd,
    EPHPremium,
    premiumTape,
    PWEdgeStd,
    PWEdgePremium,
    premiumProfile,
    lamination,
    construction,
    frontLamination,
    backLamination,
    edging,
    baseMaterialId,
    baseMakeId,
    baseMaterialThickness,
    baseSKUId,
    baseSKU,
    backMaterialId,
    backMakeId,
    backMaterialThickness,
    backSKUId,
    backSKU,
    frontFinishMaterialId,
    frontFinishThickness,
    frontFinishMakes,
    glassMaterialId,
    glassMakeId,
    glassSKUId,
    glassSKU,
    glassThickness,
    EBMaterialId,
    EBMakeId,
    EBWidth,
    EBThickness,
    EBSKUId,
    EBSKU,
    frontFinishMakeId,
    frontFinishMake,
    glassRAL,
    frontFinishSKUId,
    frontFinishSKU,
    frontShadeSwatch,
    grains,
    SBSL,
    backFinishMaterialId,
    backFinishMakeId,
    backFinishThickness,
    backFinishSKUId,
    backFinishSKU,
    backShades,
    backShadeSwatch,
    frontRAL,
    backRAL,
    EBColor,
    EBSwatch,
    baseProfileMaterialId,
    handleProfileMaterialId,
    profileWidth,
    profileMakeId,
    baseProfileSKUId,
    isPremiumProfile,
    baseProfileSKU,
    handleProfileSKUId,
    handleProfileSKU,
    topCoatMaterialId,
    topCoatMakeId,
    topCoatSKUId,
    topCoatSKU,
    backCoatMaterialId,
    backCoatMake,
    backCoatSKUId,
    backCoatSKU,
    handleType,
    IPMaterialId,
    IPHandleMaterialId,
    IPMakeId,
    IPWidth,
    IPThickness,
    IPSKUId,
    IPSKU,
    IPHandleSKUId,
    IPHandleSKU,
    profileHeight,
    wallHeightAdjustment
  }),
  update)

/**
 * @api {delete} /PIShutter/:id Delete pi shutter
 * @apiName DeletePiShutter
 * @apiGroup PiShutter
 * @apiSuccess (Success 204) 204 No Content.
 * @apiError 404 Pi shutter not found.
 */
router.delete('/:id',
  destroy)

export default router
