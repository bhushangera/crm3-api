import { OrderShippingDetail } from '.'

let orderShippingDetail

beforeEach(async () => {
  orderShippingDetail = await OrderShippingDetail.create({ OrderId: 'test', status: 'test', ShippedDate: 'test', ShippedTime: 'test', ShippingPartyId: 'test', ShippingPartyDetails: 'test', GRNo: 'test', GRImage: 'test', VehicleNo: 'test', EWayBillNo: 'test', EWayImage: 'test', EWayBillDate: 'test', EWayBilltime: 'test', DriverName: 'test', DriverMobile: 'test', Delivered: 'test', DeliveredDate: 'test', DeliveredTime: 'test', DeliveryReport: 'test', RecivedBy: 'test' })
})

describe('view', () => {
  it('returns simple view', () => {
    const view = orderShippingDetail.view()
    expect(typeof view).toBe('object')
    expect(view.id).toBe(orderShippingDetail.id)
    expect(view.OrderId).toBe(orderShippingDetail.OrderId)
    expect(view.status).toBe(orderShippingDetail.status)
    expect(view.ShippedDate).toBe(orderShippingDetail.ShippedDate)
    expect(view.ShippedTime).toBe(orderShippingDetail.ShippedTime)
    expect(view.ShippingPartyId).toBe(orderShippingDetail.ShippingPartyId)
    expect(view.ShippingPartyDetails).toBe(orderShippingDetail.ShippingPartyDetails)
    expect(view.GRNo).toBe(orderShippingDetail.GRNo)
    expect(view.GRImage).toBe(orderShippingDetail.GRImage)
    expect(view.VehicleNo).toBe(orderShippingDetail.VehicleNo)
    expect(view.EWayBillNo).toBe(orderShippingDetail.EWayBillNo)
    expect(view.EWayImage).toBe(orderShippingDetail.EWayImage)
    expect(view.EWayBillDate).toBe(orderShippingDetail.EWayBillDate)
    expect(view.EWayBilltime).toBe(orderShippingDetail.EWayBilltime)
    expect(view.DriverName).toBe(orderShippingDetail.DriverName)
    expect(view.DriverMobile).toBe(orderShippingDetail.DriverMobile)
    expect(view.Delivered).toBe(orderShippingDetail.Delivered)
    expect(view.DeliveredDate).toBe(orderShippingDetail.DeliveredDate)
    expect(view.DeliveredTime).toBe(orderShippingDetail.DeliveredTime)
    expect(view.DeliveryReport).toBe(orderShippingDetail.DeliveryReport)
    expect(view.RecivedBy).toBe(orderShippingDetail.RecivedBy)
    expect(view.createdAt).toBeTruthy()
    expect(view.updatedAt).toBeTruthy()
  })

  it('returns full view', () => {
    const view = orderShippingDetail.view(true)
    expect(typeof view).toBe('object')
    expect(view.id).toBe(orderShippingDetail.id)
    expect(view.OrderId).toBe(orderShippingDetail.OrderId)
    expect(view.status).toBe(orderShippingDetail.status)
    expect(view.ShippedDate).toBe(orderShippingDetail.ShippedDate)
    expect(view.ShippedTime).toBe(orderShippingDetail.ShippedTime)
    expect(view.ShippingPartyId).toBe(orderShippingDetail.ShippingPartyId)
    expect(view.ShippingPartyDetails).toBe(orderShippingDetail.ShippingPartyDetails)
    expect(view.GRNo).toBe(orderShippingDetail.GRNo)
    expect(view.GRImage).toBe(orderShippingDetail.GRImage)
    expect(view.VehicleNo).toBe(orderShippingDetail.VehicleNo)
    expect(view.EWayBillNo).toBe(orderShippingDetail.EWayBillNo)
    expect(view.EWayImage).toBe(orderShippingDetail.EWayImage)
    expect(view.EWayBillDate).toBe(orderShippingDetail.EWayBillDate)
    expect(view.EWayBilltime).toBe(orderShippingDetail.EWayBilltime)
    expect(view.DriverName).toBe(orderShippingDetail.DriverName)
    expect(view.DriverMobile).toBe(orderShippingDetail.DriverMobile)
    expect(view.Delivered).toBe(orderShippingDetail.Delivered)
    expect(view.DeliveredDate).toBe(orderShippingDetail.DeliveredDate)
    expect(view.DeliveredTime).toBe(orderShippingDetail.DeliveredTime)
    expect(view.DeliveryReport).toBe(orderShippingDetail.DeliveryReport)
    expect(view.RecivedBy).toBe(orderShippingDetail.RecivedBy)
    expect(view.createdAt).toBeTruthy()
    expect(view.updatedAt).toBeTruthy()
  })
})
